-----------------------------------------------------------------
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
--  @generated
-----------------------------------------------------------------
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE BangPatterns #-}
{-# OPTIONS_GHC -fno-warn-unused-imports#-}
{-# OPTIONS_GHC -fno-warn-overlapping-patterns#-}
{-# OPTIONS_GHC -fno-warn-incomplete-patterns#-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
module Safety.Types
       (OperationImpact(OperationImpact_INVALID,
                        OperationImpact_REBUILDING_STALL,
                        OperationImpact_WRITE_AVAILABILITY_LOSS,
                        OperationImpact_READ_AVAILABILITY_LOSS,
                        OperationImpact_SEQUENCING_CAPACITY_LOSS,
                        OperationImpact_STORAGE_CAPACITY_LOSS, OperationImpact__UNKNOWN),
        ShardMetadata(ShardMetadata, shardMetadata_data_health,
                      shardMetadata_is_alive, shardMetadata_storage_state,
                      shardMetadata_location, shardMetadata_location_per_scope),
        StorageSetMetadata,
        ImpactOnEpoch(ImpactOnEpoch, impactOnEpoch_log_id,
                      impactOnEpoch_epoch, impactOnEpoch_storage_set,
                      impactOnEpoch_replication, impactOnEpoch_impact,
                      impactOnEpoch_storage_set_metadata),
        CheckImpactRequest(CheckImpactRequest, checkImpactRequest_shards,
                           checkImpactRequest_target_storage_state,
                           checkImpactRequest_disable_sequencers,
                           checkImpactRequest_safety_margin,
                           checkImpactRequest_log_ids_to_check,
                           checkImpactRequest_abort_on_negative_impact,
                           checkImpactRequest_return_sample_size,
                           checkImpactRequest_check_metadata_logs,
                           checkImpactRequest_check_internal_logs,
                           checkImpactRequest_check_capacity,
                           checkImpactRequest_max_unavailable_storage_capacity_pct,
                           checkImpactRequest_max_unavailable_sequencing_capacity_pct),
        CheckImpactResponse(CheckImpactResponse,
                            checkImpactResponse_impact,
                            checkImpactResponse_internal_logs_affected,
                            checkImpactResponse_logs_affected,
                            checkImpactResponse_total_duration,
                            checkImpactResponse_total_logs_checked))
       where
import qualified Common.Types as Common
import qualified Control.DeepSeq as DeepSeq
import qualified Control.Exception as Exception
import qualified Control.Monad as Monad
import qualified Control.Monad.ST.Trans as ST
import qualified Control.Monad.Trans.Class as Trans
import qualified Data.Aeson as Aeson
import qualified Data.Aeson.Types as Aeson
import qualified Data.Default as Default
import qualified Data.Function as Function
import qualified Data.HashMap.Strict as HashMap
import qualified Data.Hashable as Hashable
import qualified Data.Int as Int
import qualified Data.List as List
import qualified Data.Map.Strict as Map
import qualified Data.Ord as Ord
import qualified Data.Text as Text
import qualified Data.Text.Encoding as Text
import qualified Nodes.Types as Nodes
import qualified Prelude as Prelude
import qualified Thrift.Binary.Parser as Parser
import qualified Thrift.CodegenTypesOnly as Thrift
import Control.Applicative ((<|>), (*>), (<*))
import Data.Aeson ((.:), (.:?), (.=), (.!=))
import Data.Monoid ((<>))
import Prelude ((.), (++), (>), (==))
import Prelude ((.), (<$>), (<*>), (>>=), (==), (/=), (<), (++))

data OperationImpact = OperationImpact_INVALID
                     | OperationImpact_REBUILDING_STALL
                     | OperationImpact_WRITE_AVAILABILITY_LOSS
                     | OperationImpact_READ_AVAILABILITY_LOSS
                     | OperationImpact_SEQUENCING_CAPACITY_LOSS
                     | OperationImpact_STORAGE_CAPACITY_LOSS
                     | OperationImpact__UNKNOWN Prelude.Int
                       deriving (Prelude.Eq, Prelude.Show, Prelude.Ord)

instance Aeson.ToJSON OperationImpact where
  toJSON = Aeson.toJSON . Thrift.fromThriftEnum

instance DeepSeq.NFData OperationImpact where
  rnf __OperationImpact = Prelude.seq __OperationImpact ()

instance Default.Default OperationImpact where
  def = OperationImpact_INVALID

instance Hashable.Hashable OperationImpact where
  hashWithSalt _salt _val
    = Hashable.hashWithSalt _salt (Thrift.fromThriftEnum _val)

instance Thrift.ThriftEnum OperationImpact where
  toThriftEnum 0 = OperationImpact_INVALID
  toThriftEnum 1 = OperationImpact_REBUILDING_STALL
  toThriftEnum 2 = OperationImpact_WRITE_AVAILABILITY_LOSS
  toThriftEnum 3 = OperationImpact_READ_AVAILABILITY_LOSS
  toThriftEnum 4 = OperationImpact_SEQUENCING_CAPACITY_LOSS
  toThriftEnum 5 = OperationImpact_STORAGE_CAPACITY_LOSS
  toThriftEnum val = OperationImpact__UNKNOWN val
  fromThriftEnum OperationImpact_INVALID = 0
  fromThriftEnum OperationImpact_REBUILDING_STALL = 1
  fromThriftEnum OperationImpact_WRITE_AVAILABILITY_LOSS = 2
  fromThriftEnum OperationImpact_READ_AVAILABILITY_LOSS = 3
  fromThriftEnum OperationImpact_SEQUENCING_CAPACITY_LOSS = 4
  fromThriftEnum OperationImpact_STORAGE_CAPACITY_LOSS = 5
  fromThriftEnum (OperationImpact__UNKNOWN val) = val
  allThriftEnumValues
    = [OperationImpact_INVALID, OperationImpact_REBUILDING_STALL,
       OperationImpact_WRITE_AVAILABILITY_LOSS,
       OperationImpact_READ_AVAILABILITY_LOSS,
       OperationImpact_SEQUENCING_CAPACITY_LOSS,
       OperationImpact_STORAGE_CAPACITY_LOSS]
  toThriftEnumEither 0 = Prelude.Right OperationImpact_INVALID
  toThriftEnumEither 1
    = Prelude.Right OperationImpact_REBUILDING_STALL
  toThriftEnumEither 2
    = Prelude.Right OperationImpact_WRITE_AVAILABILITY_LOSS
  toThriftEnumEither 3
    = Prelude.Right OperationImpact_READ_AVAILABILITY_LOSS
  toThriftEnumEither 4
    = Prelude.Right OperationImpact_SEQUENCING_CAPACITY_LOSS
  toThriftEnumEither 5
    = Prelude.Right OperationImpact_STORAGE_CAPACITY_LOSS
  toThriftEnumEither val
    = Prelude.Left
        ("toThriftEnumEither: not a valid identifier for enum OperationImpact: "
           ++ Prelude.show val)

data ShardMetadata = ShardMetadata{shardMetadata_data_health ::
                                   Nodes.ShardDataHealth,
                                   shardMetadata_is_alive :: Prelude.Bool,
                                   shardMetadata_storage_state :: Nodes.ShardStorageState,
                                   shardMetadata_location :: Prelude.Maybe Text.Text,
                                   shardMetadata_location_per_scope :: Common.Location}
                     deriving (Prelude.Eq, Prelude.Show, Prelude.Ord)

instance Aeson.ToJSON ShardMetadata where
  toJSON
    (ShardMetadata __field__data_health __field__is_alive
       __field__storage_state __field__location
       __field__location_per_scope)
    = Aeson.object
        ("data_health" .= __field__data_health :
           "is_alive" .= __field__is_alive :
             "storage_state" .= __field__storage_state :
               Prelude.maybe Prelude.id ((:) . ("location" .=)) __field__location
                 ("location_per_scope" .=
                    Map.mapKeys Thrift.keyToStr __field__location_per_scope
                    : Prelude.mempty))

instance Thrift.ThriftStruct ShardMetadata where
  buildStruct _proxy
    (ShardMetadata __field__data_health __field__is_alive
       __field__storage_state __field__location
       __field__location_per_scope)
    = Thrift.genStruct _proxy
        (Thrift.genField _proxy "data_health" (Thrift.getI32Type _proxy) 1
           0
           ((Thrift.genI32 _proxy . Prelude.fromIntegral .
               Thrift.fromThriftEnum)
              __field__data_health)
           :
           Thrift.genFieldBool _proxy "is_alive" 2 1 __field__is_alive :
             Thrift.genField _proxy "storage_state" (Thrift.getI32Type _proxy) 3
               2
               ((Thrift.genI32 _proxy . Prelude.fromIntegral .
                   Thrift.fromThriftEnum)
                  __field__storage_state)
               :
               let (__cereal__location, __id__location)
                     = case __field__location of
                         Prelude.Just _val -> ((:)
                                                 (Thrift.genField _proxy "location"
                                                    (Thrift.getStringType _proxy)
                                                    4
                                                    3
                                                    (Thrift.genText _proxy _val)),
                                               4)
                         Prelude.Nothing -> (Prelude.id, 3)
                 in
                 __cereal__location
                   (Thrift.genField _proxy "location_per_scope"
                      (Thrift.getMapType _proxy)
                      5
                      __id__location
                      ((Thrift.genMap _proxy (Thrift.getI32Type _proxy)
                          (Thrift.getStringType _proxy)
                          Prelude.False
                          (Thrift.genI32 _proxy . Prelude.fromIntegral .
                             Thrift.fromThriftEnum)
                          (Thrift.genText _proxy)
                          . Map.toList)
                         __field__location_per_scope)
                      : []))
  parseStruct _proxy
    = ST.runSTT
        (do Prelude.return ()
            __field__data_health <- ST.newSTRef Default.def
            __field__is_alive <- ST.newSTRef Prelude.False
            __field__storage_state <- ST.newSTRef Default.def
            __field__location <- ST.newSTRef Prelude.Nothing
            __field__location_per_scope <- ST.newSTRef Default.def
            let
              _parse _lastId
                = do _fieldBegin <- Trans.lift
                                      (Thrift.parseFieldBegin _proxy _lastId _idMap)
                     case _fieldBegin of
                       Thrift.FieldBegin _type _id _bool -> do case _id of
                                                                 1 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseEnum
                                                                                      _proxy
                                                                                      "ShardDataHealth")
                                                                        ST.writeSTRef
                                                                          __field__data_health
                                                                          _val
                                                                 2 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__is_alive
                                                                          _val
                                                                 3 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseEnum
                                                                                      _proxy
                                                                                      "ShardStorageState")
                                                                        ST.writeSTRef
                                                                          __field__storage_state
                                                                          _val
                                                                 4 | _type ==
                                                                       Thrift.getStringType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseText
                                                                                      _proxy)
                                                                        ST.writeSTRef
                                                                          __field__location
                                                                          (Prelude.Just _val)
                                                                 5 | _type ==
                                                                       Thrift.getMapType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Map.fromList <$>
                                                                                      Thrift.parseMap
                                                                                        _proxy
                                                                                        (Thrift.parseEnum
                                                                                           _proxy
                                                                                           "LocationScope")
                                                                                        (Thrift.parseText
                                                                                           _proxy)
                                                                                        Prelude.False)
                                                                        ST.writeSTRef
                                                                          __field__location_per_scope
                                                                          _val
                                                                 _ -> Trans.lift
                                                                        (Thrift.parseSkip _proxy
                                                                           _type
                                                                           (Prelude.Just _bool))
                                                               _parse _id
                       Thrift.FieldEnd -> do !__val__data_health <- ST.readSTRef
                                                                      __field__data_health
                                             !__val__is_alive <- ST.readSTRef __field__is_alive
                                             !__val__storage_state <- ST.readSTRef
                                                                        __field__storage_state
                                             !__val__location <- ST.readSTRef __field__location
                                             !__val__location_per_scope <- ST.readSTRef
                                                                             __field__location_per_scope
                                             Prelude.pure
                                               (ShardMetadata __val__data_health __val__is_alive
                                                  __val__storage_state
                                                  __val__location
                                                  __val__location_per_scope)
              _idMap
                = HashMap.fromList
                    [("data_health", 1), ("is_alive", 2), ("storage_state", 3),
                     ("location", 4), ("location_per_scope", 5)]
            _parse 0)

instance DeepSeq.NFData ShardMetadata where
  rnf
    (ShardMetadata __field__data_health __field__is_alive
       __field__storage_state __field__location
       __field__location_per_scope)
    = DeepSeq.rnf __field__data_health `Prelude.seq`
        DeepSeq.rnf __field__is_alive `Prelude.seq`
          DeepSeq.rnf __field__storage_state `Prelude.seq`
            DeepSeq.rnf __field__location `Prelude.seq`
              DeepSeq.rnf __field__location_per_scope `Prelude.seq` ()

instance Default.Default ShardMetadata where
  def
    = ShardMetadata Default.def Prelude.False Default.def
        Prelude.Nothing
        Default.def

instance Hashable.Hashable ShardMetadata where
  hashWithSalt __salt
    (ShardMetadata _data_health _is_alive _storage_state _location
       _location_per_scope)
    = Hashable.hashWithSalt
        (Hashable.hashWithSalt
           (Hashable.hashWithSalt
              (Hashable.hashWithSalt (Hashable.hashWithSalt __salt _data_health)
                 _is_alive)
              _storage_state)
           _location)
        ((Prelude.map (\ (_k, _v) -> (_k, _v)) . Map.toAscList)
           _location_per_scope)

type StorageSetMetadata = [ShardMetadata]

data ImpactOnEpoch = ImpactOnEpoch{impactOnEpoch_log_id ::
                                   Common.Unsigned64,
                                   impactOnEpoch_epoch :: Common.Unsigned64,
                                   impactOnEpoch_storage_set :: Common.StorageSet,
                                   impactOnEpoch_replication :: Common.ReplicationProperty,
                                   impactOnEpoch_impact :: [OperationImpact],
                                   impactOnEpoch_storage_set_metadata ::
                                   Prelude.Maybe StorageSetMetadata}
                     deriving (Prelude.Eq, Prelude.Show, Prelude.Ord)

instance Aeson.ToJSON ImpactOnEpoch where
  toJSON
    (ImpactOnEpoch __field__log_id __field__epoch __field__storage_set
       __field__replication __field__impact __field__storage_set_metadata)
    = Aeson.object
        ("log_id" .= __field__log_id :
           "epoch" .= __field__epoch :
             "storage_set" .= __field__storage_set :
               "replication" .= Map.mapKeys Thrift.keyToStr __field__replication :
                 "impact" .= __field__impact :
                   Prelude.maybe Prelude.id ((:) . ("storage_set_metadata" .=))
                     __field__storage_set_metadata
                     Prelude.mempty)

instance Thrift.ThriftStruct ImpactOnEpoch where
  buildStruct _proxy
    (ImpactOnEpoch __field__log_id __field__epoch __field__storage_set
       __field__replication __field__impact __field__storage_set_metadata)
    = Thrift.genStruct _proxy
        (Thrift.genField _proxy "log_id" (Thrift.getI64Type _proxy) 1 0
           (Thrift.genI64 _proxy __field__log_id)
           :
           Thrift.genField _proxy "epoch" (Thrift.getI64Type _proxy) 2 1
             (Thrift.genI64 _proxy __field__epoch)
             :
             Thrift.genField _proxy "storage_set" (Thrift.getListType _proxy) 3
               2
               (Thrift.genList _proxy (Thrift.getStructType _proxy)
                  (Thrift.buildStruct _proxy)
                  __field__storage_set)
               :
               Thrift.genField _proxy "replication" (Thrift.getMapType _proxy) 4 3
                 ((Thrift.genMap _proxy (Thrift.getI32Type _proxy)
                     (Thrift.getI32Type _proxy)
                     Prelude.False
                     (Thrift.genI32 _proxy . Prelude.fromIntegral .
                        Thrift.fromThriftEnum)
                     (Thrift.genI32 _proxy)
                     . Map.toList)
                    __field__replication)
                 :
                 Thrift.genField _proxy "impact" (Thrift.getListType _proxy) 5 4
                   (Thrift.genList _proxy (Thrift.getI32Type _proxy)
                      (Thrift.genI32 _proxy . Prelude.fromIntegral .
                         Thrift.fromThriftEnum)
                      __field__impact)
                   :
                   case __field__storage_set_metadata of
                     Prelude.Just _val -> Thrift.genField _proxy "storage_set_metadata"
                                            (Thrift.getListType _proxy)
                                            6
                                            5
                                            (Thrift.genList _proxy (Thrift.getStructType _proxy)
                                               (Thrift.buildStruct _proxy)
                                               _val)
                                            : []
                     Prelude.Nothing -> [])
  parseStruct _proxy
    = ST.runSTT
        (do Prelude.return ()
            __field__log_id <- ST.newSTRef Default.def
            __field__epoch <- ST.newSTRef Default.def
            __field__storage_set <- ST.newSTRef Default.def
            __field__replication <- ST.newSTRef Default.def
            __field__impact <- ST.newSTRef Default.def
            __field__storage_set_metadata <- ST.newSTRef Prelude.Nothing
            let
              _parse _lastId
                = do _fieldBegin <- Trans.lift
                                      (Thrift.parseFieldBegin _proxy _lastId _idMap)
                     case _fieldBegin of
                       Thrift.FieldBegin _type _id _bool -> do case _id of
                                                                 1 | _type ==
                                                                       Thrift.getI64Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseI64
                                                                                      _proxy)
                                                                        ST.writeSTRef
                                                                          __field__log_id
                                                                          _val
                                                                 2 | _type ==
                                                                       Thrift.getI64Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseI64
                                                                                      _proxy)
                                                                        ST.writeSTRef __field__epoch
                                                                          _val
                                                                 3 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseStruct
                                                                                           _proxy))
                                                                        ST.writeSTRef
                                                                          __field__storage_set
                                                                          _val
                                                                 4 | _type ==
                                                                       Thrift.getMapType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Map.fromList <$>
                                                                                      Thrift.parseMap
                                                                                        _proxy
                                                                                        (Thrift.parseEnum
                                                                                           _proxy
                                                                                           "LocationScope")
                                                                                        (Thrift.parseI32
                                                                                           _proxy)
                                                                                        Prelude.False)
                                                                        ST.writeSTRef
                                                                          __field__replication
                                                                          _val
                                                                 5 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseEnum
                                                                                           _proxy
                                                                                           "OperationImpact"))
                                                                        ST.writeSTRef
                                                                          __field__impact
                                                                          _val
                                                                 6 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseStruct
                                                                                           _proxy))
                                                                        ST.writeSTRef
                                                                          __field__storage_set_metadata
                                                                          (Prelude.Just _val)
                                                                 _ -> Trans.lift
                                                                        (Thrift.parseSkip _proxy
                                                                           _type
                                                                           (Prelude.Just _bool))
                                                               _parse _id
                       Thrift.FieldEnd -> do !__val__log_id <- ST.readSTRef
                                                                 __field__log_id
                                             !__val__epoch <- ST.readSTRef __field__epoch
                                             !__val__storage_set <- ST.readSTRef
                                                                      __field__storage_set
                                             !__val__replication <- ST.readSTRef
                                                                      __field__replication
                                             !__val__impact <- ST.readSTRef __field__impact
                                             !__val__storage_set_metadata <- ST.readSTRef
                                                                               __field__storage_set_metadata
                                             Prelude.pure
                                               (ImpactOnEpoch __val__log_id __val__epoch
                                                  __val__storage_set
                                                  __val__replication
                                                  __val__impact
                                                  __val__storage_set_metadata)
              _idMap
                = HashMap.fromList
                    [("log_id", 1), ("epoch", 2), ("storage_set", 3),
                     ("replication", 4), ("impact", 5), ("storage_set_metadata", 6)]
            _parse 0)

instance DeepSeq.NFData ImpactOnEpoch where
  rnf
    (ImpactOnEpoch __field__log_id __field__epoch __field__storage_set
       __field__replication __field__impact __field__storage_set_metadata)
    = DeepSeq.rnf __field__log_id `Prelude.seq`
        DeepSeq.rnf __field__epoch `Prelude.seq`
          DeepSeq.rnf __field__storage_set `Prelude.seq`
            DeepSeq.rnf __field__replication `Prelude.seq`
              DeepSeq.rnf __field__impact `Prelude.seq`
                DeepSeq.rnf __field__storage_set_metadata `Prelude.seq` ()

instance Default.Default ImpactOnEpoch where
  def
    = ImpactOnEpoch Default.def Default.def Default.def Default.def
        Default.def
        Prelude.Nothing

instance Hashable.Hashable ImpactOnEpoch where
  hashWithSalt __salt
    (ImpactOnEpoch _log_id _epoch _storage_set _replication _impact
       _storage_set_metadata)
    = Hashable.hashWithSalt
        (Hashable.hashWithSalt
           (Hashable.hashWithSalt
              (Hashable.hashWithSalt
                 (Hashable.hashWithSalt (Hashable.hashWithSalt __salt _log_id)
                    _epoch)
                 _storage_set)
              ((Prelude.map (\ (_k, _v) -> (_k, _v)) . Map.toAscList)
                 _replication))
           _impact)
        _storage_set_metadata

data CheckImpactRequest = CheckImpactRequest{checkImpactRequest_shards
                                             :: Common.ShardSet,
                                             checkImpactRequest_target_storage_state ::
                                             Prelude.Maybe Nodes.ShardStorageState,
                                             checkImpactRequest_disable_sequencers ::
                                             Prelude.Maybe Prelude.Bool,
                                             checkImpactRequest_safety_margin ::
                                             Prelude.Maybe Common.ReplicationProperty,
                                             checkImpactRequest_log_ids_to_check ::
                                             Prelude.Maybe [Common.Unsigned64],
                                             checkImpactRequest_abort_on_negative_impact ::
                                             Prelude.Maybe Prelude.Bool,
                                             checkImpactRequest_return_sample_size ::
                                             Prelude.Maybe Int.Int32,
                                             checkImpactRequest_check_metadata_logs ::
                                             Prelude.Maybe Prelude.Bool,
                                             checkImpactRequest_check_internal_logs ::
                                             Prelude.Maybe Prelude.Bool,
                                             checkImpactRequest_check_capacity ::
                                             Prelude.Maybe Prelude.Bool,
                                             checkImpactRequest_max_unavailable_storage_capacity_pct
                                             :: Int.Int32,
                                             checkImpactRequest_max_unavailable_sequencing_capacity_pct
                                             :: Int.Int32}
                          deriving (Prelude.Eq, Prelude.Show, Prelude.Ord)

instance Aeson.ToJSON CheckImpactRequest where
  toJSON
    (CheckImpactRequest __field__shards __field__target_storage_state
       __field__disable_sequencers __field__safety_margin
       __field__log_ids_to_check __field__abort_on_negative_impact
       __field__return_sample_size __field__check_metadata_logs
       __field__check_internal_logs __field__check_capacity
       __field__max_unavailable_storage_capacity_pct
       __field__max_unavailable_sequencing_capacity_pct)
    = Aeson.object
        ("shards" .= __field__shards :
           Prelude.maybe Prelude.id ((:) . ("target_storage_state" .=))
             __field__target_storage_state
             (Prelude.maybe Prelude.id ((:) . ("disable_sequencers" .=))
                __field__disable_sequencers
                (Prelude.maybe Prelude.id ((:) . ("safety_margin" .=))
                   (Prelude.fmap (Map.mapKeys Thrift.keyToStr) __field__safety_margin)
                   (Prelude.maybe Prelude.id ((:) . ("log_ids_to_check" .=))
                      __field__log_ids_to_check
                      (Prelude.maybe Prelude.id ((:) . ("abort_on_negative_impact" .=))
                         __field__abort_on_negative_impact
                         (Prelude.maybe Prelude.id ((:) . ("return_sample_size" .=))
                            __field__return_sample_size
                            (Prelude.maybe Prelude.id ((:) . ("check_metadata_logs" .=))
                               __field__check_metadata_logs
                               (Prelude.maybe Prelude.id ((:) . ("check_internal_logs" .=))
                                  __field__check_internal_logs
                                  (Prelude.maybe Prelude.id ((:) . ("check_capacity" .=))
                                     __field__check_capacity
                                     ("max_unavailable_storage_capacity_pct" .=
                                        __field__max_unavailable_storage_capacity_pct
                                        :
                                        "max_unavailable_sequencing_capacity_pct" .=
                                          __field__max_unavailable_sequencing_capacity_pct
                                          : Prelude.mempty))))))))))

instance Thrift.ThriftStruct CheckImpactRequest where
  buildStruct _proxy
    (CheckImpactRequest __field__shards __field__target_storage_state
       __field__disable_sequencers __field__safety_margin
       __field__log_ids_to_check __field__abort_on_negative_impact
       __field__return_sample_size __field__check_metadata_logs
       __field__check_internal_logs __field__check_capacity
       __field__max_unavailable_storage_capacity_pct
       __field__max_unavailable_sequencing_capacity_pct)
    = Thrift.genStruct _proxy
        (Thrift.genField _proxy "shards" (Thrift.getListType _proxy) 1 0
           (Thrift.genList _proxy (Thrift.getStructType _proxy)
              (Thrift.buildStruct _proxy)
              __field__shards)
           :
           let (__cereal__target_storage_state, __id__target_storage_state)
                 = case __field__target_storage_state of
                     Prelude.Just _val -> ((:)
                                             (Thrift.genField _proxy "target_storage_state"
                                                (Thrift.getI32Type _proxy)
                                                2
                                                1
                                                ((Thrift.genI32 _proxy . Prelude.fromIntegral .
                                                    Thrift.fromThriftEnum)
                                                   _val)),
                                           2)
                     Prelude.Nothing -> (Prelude.id, 1)
             in
             __cereal__target_storage_state
               (let (__cereal__disable_sequencers, __id__disable_sequencers)
                      = case __field__disable_sequencers of
                          Prelude.Just _val -> ((:)
                                                  (Thrift.genFieldBool _proxy "disable_sequencers" 3
                                                     __id__target_storage_state
                                                     _val),
                                                3)
                          Prelude.Nothing -> (Prelude.id, __id__target_storage_state)
                  in
                  __cereal__disable_sequencers
                    (let (__cereal__safety_margin, __id__safety_margin)
                           = case __field__safety_margin of
                               Prelude.Just _val -> ((:)
                                                       (Thrift.genField _proxy "safety_margin"
                                                          (Thrift.getMapType _proxy)
                                                          4
                                                          __id__disable_sequencers
                                                          ((Thrift.genMap _proxy
                                                              (Thrift.getI32Type _proxy)
                                                              (Thrift.getI32Type _proxy)
                                                              Prelude.False
                                                              (Thrift.genI32 _proxy .
                                                                 Prelude.fromIntegral
                                                                 . Thrift.fromThriftEnum)
                                                              (Thrift.genI32 _proxy)
                                                              . Map.toList)
                                                             _val)),
                                                     4)
                               Prelude.Nothing -> (Prelude.id, __id__disable_sequencers)
                       in
                       __cereal__safety_margin
                         (let (__cereal__log_ids_to_check, __id__log_ids_to_check)
                                = case __field__log_ids_to_check of
                                    Prelude.Just _val -> ((:)
                                                            (Thrift.genField _proxy
                                                               "log_ids_to_check"
                                                               (Thrift.getListType _proxy)
                                                               5
                                                               __id__safety_margin
                                                               (Thrift.genList _proxy
                                                                  (Thrift.getI64Type _proxy)
                                                                  (Thrift.genI64 _proxy)
                                                                  _val)),
                                                          5)
                                    Prelude.Nothing -> (Prelude.id, __id__safety_margin)
                            in
                            __cereal__log_ids_to_check
                              (let (__cereal__abort_on_negative_impact,
                                    __id__abort_on_negative_impact)
                                     = case __field__abort_on_negative_impact of
                                         Prelude.Just _val -> ((:)
                                                                 (Thrift.genFieldBool _proxy
                                                                    "abort_on_negative_impact"
                                                                    6
                                                                    __id__log_ids_to_check
                                                                    _val),
                                                               6)
                                         Prelude.Nothing -> (Prelude.id, __id__log_ids_to_check)
                                 in
                                 __cereal__abort_on_negative_impact
                                   (let (__cereal__return_sample_size, __id__return_sample_size)
                                          = case __field__return_sample_size of
                                              Prelude.Just _val -> ((:)
                                                                      (Thrift.genFieldPrim _proxy
                                                                         "return_sample_size"
                                                                         (Thrift.getI32Type _proxy)
                                                                         7
                                                                         __id__abort_on_negative_impact
                                                                         (Thrift.genI32Prim _proxy)
                                                                         _val),
                                                                    7)
                                              Prelude.Nothing -> (Prelude.id,
                                                                  __id__abort_on_negative_impact)
                                      in
                                      __cereal__return_sample_size
                                        (let (__cereal__check_metadata_logs,
                                              __id__check_metadata_logs)
                                               = case __field__check_metadata_logs of
                                                   Prelude.Just _val -> ((:)
                                                                           (Thrift.genFieldBool
                                                                              _proxy
                                                                              "check_metadata_logs"
                                                                              8
                                                                              __id__return_sample_size
                                                                              _val),
                                                                         8)
                                                   Prelude.Nothing -> (Prelude.id,
                                                                       __id__return_sample_size)
                                           in
                                           __cereal__check_metadata_logs
                                             (let (__cereal__check_internal_logs,
                                                   __id__check_internal_logs)
                                                    = case __field__check_internal_logs of
                                                        Prelude.Just _val -> ((:)
                                                                                (Thrift.genFieldBool
                                                                                   _proxy
                                                                                   "check_internal_logs"
                                                                                   9
                                                                                   __id__check_metadata_logs
                                                                                   _val),
                                                                              9)
                                                        Prelude.Nothing -> (Prelude.id,
                                                                            __id__check_metadata_logs)
                                                in
                                                __cereal__check_internal_logs
                                                  (let (__cereal__check_capacity,
                                                        __id__check_capacity)
                                                         = case __field__check_capacity of
                                                             Prelude.Just _val -> ((:)
                                                                                     (Thrift.genFieldBool
                                                                                        _proxy
                                                                                        "check_capacity"
                                                                                        10
                                                                                        __id__check_internal_logs
                                                                                        _val),
                                                                                   10)
                                                             Prelude.Nothing -> (Prelude.id,
                                                                                 __id__check_internal_logs)
                                                     in
                                                     __cereal__check_capacity
                                                       (Thrift.genFieldPrim _proxy
                                                          "max_unavailable_storage_capacity_pct"
                                                          (Thrift.getI32Type _proxy)
                                                          11
                                                          __id__check_capacity
                                                          (Thrift.genI32Prim _proxy)
                                                          __field__max_unavailable_storage_capacity_pct
                                                          :
                                                          Thrift.genFieldPrim _proxy
                                                            "max_unavailable_sequencing_capacity_pct"
                                                            (Thrift.getI32Type _proxy)
                                                            12
                                                            11
                                                            (Thrift.genI32Prim _proxy)
                                                            __field__max_unavailable_sequencing_capacity_pct
                                                            : []))))))))))
  parseStruct _proxy
    = ST.runSTT
        (do Prelude.return ()
            __field__shards <- ST.newSTRef Default.def
            __field__target_storage_state <- ST.newSTRef Prelude.Nothing
            __field__disable_sequencers <- ST.newSTRef Prelude.Nothing
            __field__safety_margin <- ST.newSTRef Prelude.Nothing
            __field__log_ids_to_check <- ST.newSTRef Prelude.Nothing
            __field__abort_on_negative_impact <- ST.newSTRef Prelude.Nothing
            __field__return_sample_size <- ST.newSTRef Prelude.Nothing
            __field__check_metadata_logs <- ST.newSTRef Prelude.Nothing
            __field__check_internal_logs <- ST.newSTRef Prelude.Nothing
            __field__check_capacity <- ST.newSTRef Prelude.Nothing
            __field__max_unavailable_storage_capacity_pct <- ST.newSTRef 25
            __field__max_unavailable_sequencing_capacity_pct <- ST.newSTRef 25
            let
              _parse _lastId
                = do _fieldBegin <- Trans.lift
                                      (Thrift.parseFieldBegin _proxy _lastId _idMap)
                     case _fieldBegin of
                       Thrift.FieldBegin _type _id _bool -> do case _id of
                                                                 1 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseStruct
                                                                                           _proxy))
                                                                        ST.writeSTRef
                                                                          __field__shards
                                                                          _val
                                                                 2 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseEnum
                                                                                      _proxy
                                                                                      "ShardStorageState")
                                                                        ST.writeSTRef
                                                                          __field__target_storage_state
                                                                          (Prelude.Just _val)
                                                                 3 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__disable_sequencers
                                                                          (Prelude.Just _val)
                                                                 4 | _type ==
                                                                       Thrift.getMapType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Map.fromList <$>
                                                                                      Thrift.parseMap
                                                                                        _proxy
                                                                                        (Thrift.parseEnum
                                                                                           _proxy
                                                                                           "LocationScope")
                                                                                        (Thrift.parseI32
                                                                                           _proxy)
                                                                                        Prelude.False)
                                                                        ST.writeSTRef
                                                                          __field__safety_margin
                                                                          (Prelude.Just _val)
                                                                 5 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseI64
                                                                                           _proxy))
                                                                        ST.writeSTRef
                                                                          __field__log_ids_to_check
                                                                          (Prelude.Just _val)
                                                                 6 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__abort_on_negative_impact
                                                                          (Prelude.Just _val)
                                                                 7 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseI32
                                                                                      _proxy)
                                                                        ST.writeSTRef
                                                                          __field__return_sample_size
                                                                          (Prelude.Just _val)
                                                                 8 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__check_metadata_logs
                                                                          (Prelude.Just _val)
                                                                 9 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__check_internal_logs
                                                                          (Prelude.Just _val)
                                                                 10 | _type ==
                                                                        Thrift.getBoolType _proxy
                                                                      ->
                                                                      do !_val <- Trans.lift
                                                                                    (Thrift.parseBoolF
                                                                                       _proxy
                                                                                       _bool)
                                                                         ST.writeSTRef
                                                                           __field__check_capacity
                                                                           (Prelude.Just _val)
                                                                 11 | _type ==
                                                                        Thrift.getI32Type _proxy
                                                                      ->
                                                                      do !_val <- Trans.lift
                                                                                    (Thrift.parseI32
                                                                                       _proxy)
                                                                         ST.writeSTRef
                                                                           __field__max_unavailable_storage_capacity_pct
                                                                           _val
                                                                 12 | _type ==
                                                                        Thrift.getI32Type _proxy
                                                                      ->
                                                                      do !_val <- Trans.lift
                                                                                    (Thrift.parseI32
                                                                                       _proxy)
                                                                         ST.writeSTRef
                                                                           __field__max_unavailable_sequencing_capacity_pct
                                                                           _val
                                                                 _ -> Trans.lift
                                                                        (Thrift.parseSkip _proxy
                                                                           _type
                                                                           (Prelude.Just _bool))
                                                               _parse _id
                       Thrift.FieldEnd -> do !__val__shards <- ST.readSTRef
                                                                 __field__shards
                                             !__val__target_storage_state <- ST.readSTRef
                                                                               __field__target_storage_state
                                             !__val__disable_sequencers <- ST.readSTRef
                                                                             __field__disable_sequencers
                                             !__val__safety_margin <- ST.readSTRef
                                                                        __field__safety_margin
                                             !__val__log_ids_to_check <- ST.readSTRef
                                                                           __field__log_ids_to_check
                                             !__val__abort_on_negative_impact <- ST.readSTRef
                                                                                   __field__abort_on_negative_impact
                                             !__val__return_sample_size <- ST.readSTRef
                                                                             __field__return_sample_size
                                             !__val__check_metadata_logs <- ST.readSTRef
                                                                              __field__check_metadata_logs
                                             !__val__check_internal_logs <- ST.readSTRef
                                                                              __field__check_internal_logs
                                             !__val__check_capacity <- ST.readSTRef
                                                                         __field__check_capacity
                                             !__val__max_unavailable_storage_capacity_pct <- ST.readSTRef
                                                                                               __field__max_unavailable_storage_capacity_pct
                                             !__val__max_unavailable_sequencing_capacity_pct <- ST.readSTRef
                                                                                                  __field__max_unavailable_sequencing_capacity_pct
                                             Prelude.pure
                                               (CheckImpactRequest __val__shards
                                                  __val__target_storage_state
                                                  __val__disable_sequencers
                                                  __val__safety_margin
                                                  __val__log_ids_to_check
                                                  __val__abort_on_negative_impact
                                                  __val__return_sample_size
                                                  __val__check_metadata_logs
                                                  __val__check_internal_logs
                                                  __val__check_capacity
                                                  __val__max_unavailable_storage_capacity_pct
                                                  __val__max_unavailable_sequencing_capacity_pct)
              _idMap
                = HashMap.fromList
                    [("shards", 1), ("target_storage_state", 2),
                     ("disable_sequencers", 3), ("safety_margin", 4),
                     ("log_ids_to_check", 5), ("abort_on_negative_impact", 6),
                     ("return_sample_size", 7), ("check_metadata_logs", 8),
                     ("check_internal_logs", 9), ("check_capacity", 10),
                     ("max_unavailable_storage_capacity_pct", 11),
                     ("max_unavailable_sequencing_capacity_pct", 12)]
            _parse 0)

instance DeepSeq.NFData CheckImpactRequest where
  rnf
    (CheckImpactRequest __field__shards __field__target_storage_state
       __field__disable_sequencers __field__safety_margin
       __field__log_ids_to_check __field__abort_on_negative_impact
       __field__return_sample_size __field__check_metadata_logs
       __field__check_internal_logs __field__check_capacity
       __field__max_unavailable_storage_capacity_pct
       __field__max_unavailable_sequencing_capacity_pct)
    = DeepSeq.rnf __field__shards `Prelude.seq`
        DeepSeq.rnf __field__target_storage_state `Prelude.seq`
          DeepSeq.rnf __field__disable_sequencers `Prelude.seq`
            DeepSeq.rnf __field__safety_margin `Prelude.seq`
              DeepSeq.rnf __field__log_ids_to_check `Prelude.seq`
                DeepSeq.rnf __field__abort_on_negative_impact `Prelude.seq`
                  DeepSeq.rnf __field__return_sample_size `Prelude.seq`
                    DeepSeq.rnf __field__check_metadata_logs `Prelude.seq`
                      DeepSeq.rnf __field__check_internal_logs `Prelude.seq`
                        DeepSeq.rnf __field__check_capacity `Prelude.seq`
                          DeepSeq.rnf __field__max_unavailable_storage_capacity_pct
                            `Prelude.seq`
                            DeepSeq.rnf __field__max_unavailable_sequencing_capacity_pct
                              `Prelude.seq` ()

instance Default.Default CheckImpactRequest where
  def
    = CheckImpactRequest Default.def Prelude.Nothing Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing
        25
        25

instance Hashable.Hashable CheckImpactRequest where
  hashWithSalt __salt
    (CheckImpactRequest _shards _target_storage_state
       _disable_sequencers _safety_margin _log_ids_to_check
       _abort_on_negative_impact _return_sample_size _check_metadata_logs
       _check_internal_logs _check_capacity
       _max_unavailable_storage_capacity_pct
       _max_unavailable_sequencing_capacity_pct)
    = Hashable.hashWithSalt
        (Hashable.hashWithSalt
           (Hashable.hashWithSalt
              (Hashable.hashWithSalt
                 (Hashable.hashWithSalt
                    (Hashable.hashWithSalt
                       (Hashable.hashWithSalt
                          (Hashable.hashWithSalt
                             (Hashable.hashWithSalt
                                (Hashable.hashWithSalt
                                   (Hashable.hashWithSalt (Hashable.hashWithSalt __salt _shards)
                                      _target_storage_state)
                                   _disable_sequencers)
                                (Prelude.fmap
                                   (Prelude.map (\ (_k, _v) -> (_k, _v)) . Map.toAscList)
                                   _safety_margin))
                             _log_ids_to_check)
                          _abort_on_negative_impact)
                       _return_sample_size)
                    _check_metadata_logs)
                 _check_internal_logs)
              _check_capacity)
           _max_unavailable_storage_capacity_pct)
        _max_unavailable_sequencing_capacity_pct

data CheckImpactResponse = CheckImpactResponse{checkImpactResponse_impact
                                               :: [OperationImpact],
                                               checkImpactResponse_internal_logs_affected ::
                                               Prelude.Maybe Prelude.Bool,
                                               checkImpactResponse_logs_affected ::
                                               Prelude.Maybe [ImpactOnEpoch],
                                               checkImpactResponse_total_duration ::
                                               Prelude.Maybe Int.Int32,
                                               checkImpactResponse_total_logs_checked ::
                                               Prelude.Maybe Int.Int32}
                           deriving (Prelude.Eq, Prelude.Show, Prelude.Ord)

instance Aeson.ToJSON CheckImpactResponse where
  toJSON
    (CheckImpactResponse __field__impact
       __field__internal_logs_affected __field__logs_affected
       __field__total_duration __field__total_logs_checked)
    = Aeson.object
        ("impact" .= __field__impact :
           Prelude.maybe Prelude.id ((:) . ("internal_logs_affected" .=))
             __field__internal_logs_affected
             (Prelude.maybe Prelude.id ((:) . ("logs_affected" .=))
                __field__logs_affected
                (Prelude.maybe Prelude.id ((:) . ("total_duration" .=))
                   __field__total_duration
                   (Prelude.maybe Prelude.id ((:) . ("total_logs_checked" .=))
                      __field__total_logs_checked
                      Prelude.mempty))))

instance Thrift.ThriftStruct CheckImpactResponse where
  buildStruct _proxy
    (CheckImpactResponse __field__impact
       __field__internal_logs_affected __field__logs_affected
       __field__total_duration __field__total_logs_checked)
    = Thrift.genStruct _proxy
        (Thrift.genField _proxy "impact" (Thrift.getListType _proxy) 1 0
           (Thrift.genList _proxy (Thrift.getI32Type _proxy)
              (Thrift.genI32 _proxy . Prelude.fromIntegral .
                 Thrift.fromThriftEnum)
              __field__impact)
           :
           let (__cereal__internal_logs_affected,
                __id__internal_logs_affected)
                 = case __field__internal_logs_affected of
                     Prelude.Just _val -> ((:)
                                             (Thrift.genFieldBool _proxy "internal_logs_affected" 2
                                                1
                                                _val),
                                           2)
                     Prelude.Nothing -> (Prelude.id, 1)
             in
             __cereal__internal_logs_affected
               (let (__cereal__logs_affected, __id__logs_affected)
                      = case __field__logs_affected of
                          Prelude.Just _val -> ((:)
                                                  (Thrift.genField _proxy "logs_affected"
                                                     (Thrift.getListType _proxy)
                                                     3
                                                     __id__internal_logs_affected
                                                     (Thrift.genList _proxy
                                                        (Thrift.getStructType _proxy)
                                                        (Thrift.buildStruct _proxy)
                                                        _val)),
                                                3)
                          Prelude.Nothing -> (Prelude.id, __id__internal_logs_affected)
                  in
                  __cereal__logs_affected
                    (let (__cereal__total_duration, __id__total_duration)
                           = case __field__total_duration of
                               Prelude.Just _val -> ((:)
                                                       (Thrift.genFieldPrim _proxy "total_duration"
                                                          (Thrift.getI32Type _proxy)
                                                          4
                                                          __id__logs_affected
                                                          (Thrift.genI32Prim _proxy)
                                                          _val),
                                                     4)
                               Prelude.Nothing -> (Prelude.id, __id__logs_affected)
                       in
                       __cereal__total_duration
                         (case __field__total_logs_checked of
                            Prelude.Just _val -> Thrift.genFieldPrim _proxy
                                                   "total_logs_checked"
                                                   (Thrift.getI32Type _proxy)
                                                   5
                                                   __id__total_duration
                                                   (Thrift.genI32Prim _proxy)
                                                   _val
                                                   : []
                            Prelude.Nothing -> []))))
  parseStruct _proxy
    = ST.runSTT
        (do Prelude.return ()
            __field__impact <- ST.newSTRef Default.def
            __field__internal_logs_affected <- ST.newSTRef Prelude.Nothing
            __field__logs_affected <- ST.newSTRef Prelude.Nothing
            __field__total_duration <- ST.newSTRef Prelude.Nothing
            __field__total_logs_checked <- ST.newSTRef Prelude.Nothing
            let
              _parse _lastId
                = do _fieldBegin <- Trans.lift
                                      (Thrift.parseFieldBegin _proxy _lastId _idMap)
                     case _fieldBegin of
                       Thrift.FieldBegin _type _id _bool -> do case _id of
                                                                 1 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseEnum
                                                                                           _proxy
                                                                                           "OperationImpact"))
                                                                        ST.writeSTRef
                                                                          __field__impact
                                                                          _val
                                                                 2 | _type ==
                                                                       Thrift.getBoolType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseBoolF
                                                                                      _proxy
                                                                                      _bool)
                                                                        ST.writeSTRef
                                                                          __field__internal_logs_affected
                                                                          (Prelude.Just _val)
                                                                 3 | _type ==
                                                                       Thrift.getListType _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Prelude.snd <$>
                                                                                      Thrift.parseList
                                                                                        _proxy
                                                                                        (Thrift.parseStruct
                                                                                           _proxy))
                                                                        ST.writeSTRef
                                                                          __field__logs_affected
                                                                          (Prelude.Just _val)
                                                                 4 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseI32
                                                                                      _proxy)
                                                                        ST.writeSTRef
                                                                          __field__total_duration
                                                                          (Prelude.Just _val)
                                                                 5 | _type ==
                                                                       Thrift.getI32Type _proxy
                                                                     ->
                                                                     do !_val <- Trans.lift
                                                                                   (Thrift.parseI32
                                                                                      _proxy)
                                                                        ST.writeSTRef
                                                                          __field__total_logs_checked
                                                                          (Prelude.Just _val)
                                                                 _ -> Trans.lift
                                                                        (Thrift.parseSkip _proxy
                                                                           _type
                                                                           (Prelude.Just _bool))
                                                               _parse _id
                       Thrift.FieldEnd -> do !__val__impact <- ST.readSTRef
                                                                 __field__impact
                                             !__val__internal_logs_affected <- ST.readSTRef
                                                                                 __field__internal_logs_affected
                                             !__val__logs_affected <- ST.readSTRef
                                                                        __field__logs_affected
                                             !__val__total_duration <- ST.readSTRef
                                                                         __field__total_duration
                                             !__val__total_logs_checked <- ST.readSTRef
                                                                             __field__total_logs_checked
                                             Prelude.pure
                                               (CheckImpactResponse __val__impact
                                                  __val__internal_logs_affected
                                                  __val__logs_affected
                                                  __val__total_duration
                                                  __val__total_logs_checked)
              _idMap
                = HashMap.fromList
                    [("impact", 1), ("internal_logs_affected", 2),
                     ("logs_affected", 3), ("total_duration", 4),
                     ("total_logs_checked", 5)]
            _parse 0)

instance DeepSeq.NFData CheckImpactResponse where
  rnf
    (CheckImpactResponse __field__impact
       __field__internal_logs_affected __field__logs_affected
       __field__total_duration __field__total_logs_checked)
    = DeepSeq.rnf __field__impact `Prelude.seq`
        DeepSeq.rnf __field__internal_logs_affected `Prelude.seq`
          DeepSeq.rnf __field__logs_affected `Prelude.seq`
            DeepSeq.rnf __field__total_duration `Prelude.seq`
              DeepSeq.rnf __field__total_logs_checked `Prelude.seq` ()

instance Default.Default CheckImpactResponse where
  def
    = CheckImpactResponse Default.def Prelude.Nothing Prelude.Nothing
        Prelude.Nothing
        Prelude.Nothing

instance Hashable.Hashable CheckImpactResponse where
  hashWithSalt __salt
    (CheckImpactResponse _impact _internal_logs_affected _logs_affected
       _total_duration _total_logs_checked)
    = Hashable.hashWithSalt
        (Hashable.hashWithSalt
           (Hashable.hashWithSalt
              (Hashable.hashWithSalt (Hashable.hashWithSalt __salt _impact)
                 _internal_logs_affected)
              _logs_affected)
           _total_duration)
        _total_logs_checked
