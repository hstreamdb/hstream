cabal-version:      2.2
name:               hstream-store
version:            0.1.0.0
synopsis:           High performance stream processing platform for IoT data written in Haskell.
description:        Please see the README on Github at
                    <https://github.com/hstreamdb/hstream#readme>
license:            BSD-3-Clause
license-file:       LICENSE
copyright:          Copyright (c) 2020 EMQ Technologies Co., Ltd.
author:             Feng Lee <feng@emqx.io>
maintainer:         lambda@emqx.io
tested-with:        GHC == 8.10.3, GHC == 8.8.4
category:           Database
homepage:           https://github.com/hstreamdb/hstream
bug-reports:        https://github.com/hstreamdb/hstream/issues
build-type:         Custom
extra-source-files: ChangeLog.md
                    README.md
                    include/hs_logdevice.h

custom-setup
  setup-depends: base >= 4.5 && < 5, Cabal >= 2.4 && < 4

source-repository head
  type:     git
  location: https://github.com/hstreamdb/hstream

library
  exposed-modules:    HStream.Store
                      HStream.Store.AdminClient
                      HStream.Store.Exception
                      HStream.Store.Logger
                      HStream.Store.Stream
  other-modules:      HStream.Internal.FFI
                      HStream.Store.Stream.Appender
                      HStream.Store.Stream.Checkpoint
                      HStream.Store.Stream.Reader
                      HStream.Store.Stream.Topic
  build-depends:      base       >= 4.11 && < 5
                    , Z-Data     == 0.4.*
                    , Z-IO       == 0.4.*
                    , cache      ^>= 0.1
                    , containers ^>= 0.6
                    , ghc-prim   >= 0.5 && < 0.7
                    , primitive  ^>= 0.7
                    , random     ^>= 1.2
                    , time       >= 1.9 && < 2.0
  default-language:   Haskell2010
  default-extensions: OverloadedStrings
  extra-libraries:    stdc++, folly, logdevice, logdevice_admin_clients, thriftcpp2,
                      thriftprotocol, glog, boost_context
  cxx-options:        -std=c++17
  cpp-options:        -std=c++17
  cxx-sources:        cbits/hs_logdevice.cpp, cbits/hs_logattribute.cpp,
                      cbits/hs_logdevice_appender.cpp, cbits/hs_logconfigtypes.cpp,
                      cbits/hs_logdevice_reader.cpp, cbits/hs_checkpoint.cpp,
                      cbits/hs_logdevice_admin.cpp
  extra-lib-dirs:     /usr/local/lib
  includes:           hs_logdevice.h
  include-dirs:       include, /usr/local/include
  build-tool-depends: hsc2hs:hsc2hs
  ghc-options:        -Wall -Wcompat -Widentities -Wincomplete-record-updates
                      -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints

test-suite hstream-store-test
  type:               exitcode-stdio-1.0
  main-is:            Spec.hs
  other-modules:      HStream.Store.AppenderSpec
                      HStream.Store.ReaderSpec
                      HStream.Store.TopicSpec
  hs-source-dirs:     test
  build-depends:      base >= 4.11 && < 5, Z-Data, hspec, hstream-store, random ^>= 1.2
  default-language:   Haskell2010
  build-tool-depends: hspec-discover:hspec-discover == 2.*
  ghc-options:        -Wall -Wcompat -Widentities -Wincomplete-record-updates
                      -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints
                      -threaded -rtsopts -with-rtsopts=-N
