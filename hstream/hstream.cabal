cabal-version:      2.2
name:               hstream
version:            0.1.0.0
synopsis:
  High performance stream processing platform for IoT data written in Haskell.

description:
  Please see the README on Github at
  <https://github.com/hstream-io/hstream#readme>

license:            BSD-3-Clause
license-file:       LICENSE
copyright:          Copyright (c) 2020 EMQ Technologies Co., Ltd.
author:             Feng Lee <feng@emqx.io>
maintainer:         lambda@emqx.io
tested-with:        GHC ==8.8.4 || ==8.10.4
category:           Database
homepage:           https://github.com/hstream-io/hstream
bug-reports:        https://github.com/hstream-io/hstream/issues
build-type:         Simple
extra-source-files: ChangeLog.md

source-repository head
  type:     git
  location: https://github.com/hstream-io/hstream

executable hstream-client
  main-is:          Main.hs
  hs-source-dirs:   client
  build-depends:
    , base
    , grpc-haskell
    , haskeline
    , hstream-server
    , hstream-sql
    , optparse-applicative
    , random
    , text

  default-language: Haskell2010
  ghc-options:
    -Wall -Wcompat -Widentities -Wincomplete-record-updates -threaded
    -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints

test-suite hstream-test
  type:               exitcode-stdio-1.0
  main-is:            Spec.hs
  other-modules:      HStream.RunSQLSpec
  hs-source-dirs:     test
  build-depends:
    , aeson
    , base                >=4.11 && <5
    , hspec
    , hstream-processing
    , hstream-sql
    , hstream-store
    , random              ^>=1.2
    , rio
    , scientific
    , Z-Data

  default-language:   Haskell2010
  build-tool-depends: hspec-discover:hspec-discover ==2.*
  ghc-options:
    -Wall -Wcompat -Widentities -Wincomplete-record-updates
    -Wincomplete-uni-patterns -Wpartial-fields -Wredundant-constraints
    -threaded -rtsopts -with-rtsopts=-N
