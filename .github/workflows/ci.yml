name: CI

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

jobs:
  pre-build:
    runs-on: ubuntu-latest
    name: Prepare pre-build environment for tests
    outputs:
      ghc: ${{ steps.parser.outputs.ghc }}
    steps:
      - uses: actions/checkout@v2

      - id: parser
        run: |
          pkgcabal="hstream/hstream.cabal"
          GHCS=$(cat ${pkgcabal} | grep tested-with | sed -e 's/[^0-9|\.]/ /g' -e 's/^ *//g' -e 's/ *$//g' | python3 -c 'import sys, json; print(json.dumps([x.strip() for x in sys.stdin.read().split()]))')
          echo "Set ghc versions: $GHCS..."
          echo "::set-output name=ghc::$GHCS"

      - name: Run stylish-haskell
        run: |
          # install stylish-haskell
          PACKAGE=stylish-haskell
          RELEASES=$(curl --silent https://github.com/jaspervdj/$PACKAGE/releases)
          URL=https://github.com/$(echo $RELEASES | grep -o '\"[^\"]*-linux-x86_64\.tar\.gz\"' | sed s/\"//g | head -n1)
          VERSION=$(echo $URL | sed -e 's/.*-\(v[\.0-9]\+-linux-x86_64\)\.tar\.gz/\1/')
          TEMP=$(mktemp --directory)
          curl --progress-bar --location -o$TEMP/$PACKAGE.tar.gz $URL
          tar -xzf $TEMP/$PACKAGE.tar.gz -C$TEMP
          chmod +x $TEMP/$PACKAGE-$VERSION/$PACKAGE
          # check all sources
          echo "Run script/format.sh with latest stylish-haskell..."
          FORMATER_BIN=$TEMP/$PACKAGE-$VERSION/$PACKAGE bash script/format.sh && git diff-index --exit-code HEAD

  build-and-test:
    needs: pre-build
    runs-on: ubuntu-latest
    name: GHC-${{ matrix.ghc }}
    strategy:
      matrix:
        ghc: ${{ fromJson(needs.pre-build.outputs.ghc) }}
    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-

      - name: Build and Test
        run: |
          GHC_VERSION=${{ matrix.ghc }} script/docker-test.sh
